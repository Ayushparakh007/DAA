import java.util.*;

class TUF {
    static ArrayList<Integer> FindUnion(int arr1[], int arr2[], int n, int m, HashMap<Integer, Integer> freq1, HashMap<Integer, Integer> freq2) {
        int i = 0, j = 0; // pointers
        ArrayList<Integer> Union = new ArrayList<>(); // Union vector

        while (i < n && j < m) {
            if (arr1[i] <= arr2[j]) // Case 1 and 2
            {
                if (Union.size() == 0 || Union.get(Union.size() - 1) != arr1[i])
                    Union.add(arr1[i]);
                freq1.put(arr1[i], freq1.getOrDefault(arr1[i], 0) + 1);
                i++;
            } else // case 3
            {
                if (Union.size() == 0 || Union.get(Union.size() - 1) != arr2[j])
                    Union.add(arr2[j]);
                freq2.put(arr2[j], freq2.getOrDefault(arr2[j], 0) + 1);
                j++;
            }
        }
        while (i < n) // IF any element left in arr1
        {
            if (Union.get(Union.size() - 1) != arr1[i])
                Union.add(arr1[i]);
            freq1.put(arr1[i], freq1.getOrDefault(arr1[i], 0) + 1);
            i++;
        }
        while (j < m) // If any elements left in arr2
        {
            if (Union.get(Union.size() - 1) != arr2[j])
                Union.add(arr2[j]);
            freq2.put(arr2[j], freq2.getOrDefault(arr2[j], 0) + 1);
            j++;
        }
        return Union;
    }

    public static void main(String args[]) {
        int n = 10, m = 7;
        int arr1[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        int arr2[] = {2, 3, 4, 4, 5, 11, 12};

        HashMap<Integer, Integer> freq1 = new HashMap<>();
        HashMap<Integer, Integer> freq2 = new HashMap<>();

        ArrayList<Integer> Union = FindUnion(arr1, arr2, n, m, freq1, freq2);

        System.out.println("Union of arr1 and arr2 is: ");
        for (int val : Union)
            System.out.print(val + " ");
        System.out.println();

        System.out.println("Duplicate elements in arr1: ");
        for (Map.Entry<Integer, Integer> entry : freq1.entrySet()) {
            if (entry.getValue() > 1) {
                System.out.println("Element " + entry.getKey() + " has " + entry.getValue() + " occurrences in arr1");
            }
        }

        System.out.println("Duplicate elements in arr2: ");
        for (Map.Entry<Integer, Integer> entry : freq2.entrySet()) {
            if (entry.getValue() > 1) {
                System.out.println("Element " + entry.getKey() + " has " + entry.getValue() + " occurrences in arr2");
            }
        }
    }
}
